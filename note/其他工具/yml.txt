YAML 是一种人性化的数据序列化编程语言的标准。
YAML 不是一种标记语言。
基本语法
	大小写敏感
	使用缩进表示层级关系
	缩进时不允许使用Tab键，只允许使用空格。
	缩进的空格数目不重要，只要相同层级的元素左侧对齐即可
#表示注释，从这个字符一直草行尾，都会被解析器忽略
数据结构
	对象：键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）
	数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）
	纯量（scalars）：单个的、不可再分的值
例子
	对象
		a ) animal: pets
		b ) hash: { name: Steve, foo: bar } 
	数组
		- Cat
		- Dog
		- Goldfish
		也可以是
		-
 		 - Cat
 		 - Dog
 		 - Goldfish
		表示外面的数组包含了一个
		- Cat
		- Dog
		- Goldfish
		数组。
		数组的行内表示法
		animal: [Cat, Dog]
	复合结构
		languages:
		 - Ruby
		 - Perl
		 - Python 
		websites:
		 YAML: yaml.org 
		 Ruby: ruby-lang.org 
		 Python: python.org 
		 Perl: use.perl.org 
	纯量
		数值
			number: 12.30
		布尔值
			isSet: true
		null值
			parent: ~
		时间（ISO8601格式）
			iso8601: 2018-7-28
YAML使用两个感叹号，强制转换数据类型。
	e: !!str 123
	f: !!str true
	字符串
		str: abcdefg
	带空格或特殊字符的字符串(需要写在引号（单引号和双引号都可以）之间)
		str: 'Bob: hello'
	单引号中需要输入单引号需要两个单引号转义
		str: 'I''m busy'
	
	多行字符串
		str: 这是一段
		  多行
		  字符串
	使用|保留换行符
	使用>折叠换行符

		this: |
		  Foo
		  Bar
		that: >
		  Foo
		  Bar
	+表示文字块末尾的换行
	-表示删除字符串末尾的换行
		s1: |
		  Foo
		
		s2: |+
		  Foo
		
		
		s3: |-
		  Foo
	字符串之中可以插入 HTML 标记。

		message: |
		
		  <p style="color: red">
		    段落
		  </p>
引用
锚点&和别名*，可以用来引用。

defaults: &defaults
  adapter:  postgres
  host:     localhost

development:
  database: myapp_development
  <<: *defaults

test:
  database: myapp_test
  <<: *defaults

等同于下面的代码。

defaults:
  adapter:  postgres
  host:     localhost

development:
  database: myapp_development
  adapter:  postgres
  host:     localhost

test:
  database: myapp_test
  adapter:  postgres
  host:     localhost
&用来建立锚点（defaults），<<表示合并到当前数据，*用来引用锚点。
下面是另一个例子。

- &showell Steve 
- Clark 
- Brian 
- Oren 
- *showell
等同于
- Steve 
- Clark 
- Brian 
- Oren 
- Steve